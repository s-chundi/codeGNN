import numpy as np

import torch
import torch_geometric as pyg

NODE_LABELS = ['UNEXPOSED_DECL', 'STRUCT_DECL', 'UNION_DECL', 'CLASS_DECL', 'ENUM_DECL', 'FIELD_DECL',
               'ENUM_CONSTANT_DECL', 'FUNCTION_DECL', 'VAR_DECL', 'PARM_DECL', 'OBJC_INTERFACE_DECL',
               'OBJC_CATEGORY_DECL', 'OBJC_PROTOCOL_DECL', 'OBJC_PROPERTY_DECL', 'OBJC_IVAR_DECL',
               'OBJC_INSTANCE_METHOD_DECL', 'OBJC_CLASS_METHOD_DECL', 'OBJC_IMPLEMENTATION_DECL',
               'OBJC_CATEGORY_IMPL_DECL', 'TYPEDEF_DECL', 'CXX_METHOD', 'NAMESPACE', 'LINKAGE_SPEC', 'CONSTRUCTOR',
               'DESTRUCTOR', 'CONVERSION_FUNCTION', 'TEMPLATE_TYPE_PARAMETER', 'TEMPLATE_NON_TYPE_PARAMETER',
               'TEMPLATE_TEMPLATE_PARAMETER', 'FUNCTION_TEMPLATE', 'CLASS_TEMPLATE',
               'CLASS_TEMPLATE_PARTIAL_SPECIALIZATION', 'NAMESPACE_ALIAS', 'USING_DIRECTIVE', 'USING_DECLARATION',
               'TYPE_ALIAS_DECL', 'OBJC_SYNTHESIZE_DECL', 'OBJC_DYNAMIC_DECL', 'CXX_ACCESS_SPEC_DECL',
               'OBJC_SUPER_CLASS_REF', 'OBJC_PROTOCOL_REF', 'OBJC_CLASS_REF', 'TYPE_REF', 'CXX_BASE_SPECIFIER',
               'TEMPLATE_REF', 'NAMESPACE_REF', 'MEMBER_REF', 'LABEL_REF', 'OVERLOADED_DECL_REF', 'VARIABLE_REF',
               'INVALID_FILE', 'NO_DECL_FOUND', 'NOT_IMPLEMENTED', 'INVALID_CODE', 'UNEXPOSED_EXPR', 'DECL_REF_EXPR',
               'MEMBER_REF_EXPR', 'CALL_EXPR', 'OBJC_MESSAGE_EXPR', 'BLOCK_EXPR', 'INTEGER_LITERAL', 'FLOATING_LITERAL',
               'IMAGINARY_LITERAL', 'STRING_LITERAL', 'CHARACTER_LITERAL', 'PAREN_EXPR', 'UNARY_OPERATOR',
               'ARRAY_SUBSCRIPT_EXPR', 'BINARY_OPERATOR', 'COMPOUND_ASSIGNMENT_OPERATOR', 'CONDITIONAL_OPERATOR',
               'CSTYLE_CAST_EXPR', 'COMPOUND_LITERAL_EXPR', 'INIT_LIST_EXPR', 'ADDR_LABEL_EXPR', 'StmtExpr',
               'GENERIC_SELECTION_EXPR', 'GNU_NULL_EXPR', 'CXX_STATIC_CAST_EXPR', 'CXX_DYNAMIC_CAST_EXPR',
               'CXX_REINTERPRET_CAST_EXPR', 'CXX_CONST_CAST_EXPR', 'CXX_FUNCTIONAL_CAST_EXPR', 'CXX_TYPEID_EXPR',
               'CXX_BOOL_LITERAL_EXPR', 'CXX_NULL_PTR_LITERAL_EXPR', 'CXX_THIS_EXPR', 'CXX_THROW_EXPR', 'CXX_NEW_EXPR',
               'CXX_DELETE_EXPR', 'CXX_UNARY_EXPR', 'OBJC_STRING_LITERAL', 'OBJC_ENCODE_EXPR', 'OBJC_SELECTOR_EXPR',
               'OBJC_PROTOCOL_EXPR', 'OBJC_BRIDGE_CAST_EXPR', 'PACK_EXPANSION_EXPR', 'SIZE_OF_PACK_EXPR', 'LAMBDA_EXPR',
               'OBJ_BOOL_LITERAL_EXPR', 'OBJ_SELF_EXPR', 'OMP_ARRAY_SECTION_EXPR', 'OBJC_AVAILABILITY_CHECK_EXPR',
               'UNEXPOSED_STMT', 'LABEL_STMT', 'COMPOUND_STMT', 'CASE_STMT', 'DEFAULT_STMT', 'IF_STMT', 'SWITCH_STMT',
               'WHILE_STMT', 'DO_STMT', 'FOR_STMT', 'GOTO_STMT', 'INDIRECT_GOTO_STMT', 'CONTINUE_STMT', 'BREAK_STMT',
               'RETURN_STMT', 'ASM_STMT', 'OBJC_AT_TRY_STMT', 'OBJC_AT_CATCH_STMT', 'OBJC_AT_FINALLY_STMT',
               'OBJC_AT_THROW_STMT', 'OBJC_AT_SYNCHRONIZED_STMT', 'OBJC_AUTORELEASE_POOL_STMT',
               'OBJC_FOR_COLLECTION_STMT', 'CXX_CATCH_STMT', 'CXX_TRY_STMT', 'CXX_FOR_RANGE_STMT', 'SEH_TRY_STMT',
               'SEH_EXCEPT_STMT', 'SEH_FINALLY_STMT', 'MS_ASM_STMT', 'NULL_STMT', 'DECL_STMT', 'OMP_PARALLEL_DIRECTIVE',
               'OMP_SIMD_DIRECTIVE', 'OMP_FOR_DIRECTIVE', 'OMP_SECTIONS_DIRECTIVE', 'OMP_SECTION_DIRECTIVE',
               'OMP_SINGLE_DIRECTIVE', 'OMP_PARALLEL_FOR_DIRECTIVE', 'OMP_PARALLEL_SECTIONS_DIRECTIVE',
               'OMP_TASK_DIRECTIVE', 'OMP_MASTER_DIRECTIVE', 'OMP_CRITICAL_DIRECTIVE', 'OMP_TASKYIELD_DIRECTIVE',
               'OMP_BARRIER_DIRECTIVE', 'OMP_TASKWAIT_DIRECTIVE', 'OMP_FLUSH_DIRECTIVE', 'SEH_LEAVE_STMT',
               'OMP_ORDERED_DIRECTIVE', 'OMP_ATOMIC_DIRECTIVE', 'OMP_FOR_SIMD_DIRECTIVE',
               'OMP_PARALLELFORSIMD_DIRECTIVE', 'OMP_TARGET_DIRECTIVE', 'OMP_TEAMS_DIRECTIVE',
               'OMP_TASKGROUP_DIRECTIVE', 'OMP_CANCELLATION_POINT_DIRECTIVE', 'OMP_CANCEL_DIRECTIVE',
               'OMP_TARGET_DATA_DIRECTIVE', 'OMP_TASK_LOOP_DIRECTIVE', 'OMP_TASK_LOOP_SIMD_DIRECTIVE',
               'OMP_DISTRIBUTE_DIRECTIVE', 'OMP_TARGET_ENTER_DATA_DIRECTIVE', 'OMP_TARGET_EXIT_DATA_DIRECTIVE',
               'OMP_TARGET_PARALLEL_DIRECTIVE', 'OMP_TARGET_PARALLELFOR_DIRECTIVE', 'OMP_TARGET_UPDATE_DIRECTIVE',
               'OMP_DISTRIBUTE_PARALLELFOR_DIRECTIVE', 'OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE',
               'OMP_DISTRIBUTE_SIMD_DIRECTIVE', 'OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE', 'OMP_TARGET_SIMD_DIRECTIVE',
               'OMP_TEAMS_DISTRIBUTE_DIRECTIVE', 'TRANSLATION_UNIT', 'UNEXPOSED_ATTR', 'IB_ACTION_ATTR',
               'IB_OUTLET_ATTR', 'IB_OUTLET_COLLECTION_ATTR', 'CXX_FINAL_ATTR', 'CXX_OVERRIDE_ATTR', 'ANNOTATE_ATTR',
               'ASM_LABEL_ATTR', 'PACKED_ATTR', 'PURE_ATTR', 'CONST_ATTR', 'NODUPLICATE_ATTR', 'CUDACONSTANT_ATTR',
               'CUDADEVICE_ATTR', 'CUDAGLOBAL_ATTR', 'CUDAHOST_ATTR', 'CUDASHARED_ATTR', 'VISIBILITY_ATTR',
               'DLLEXPORT_ATTR', 'DLLIMPORT_ATTR', 'CONVERGENT_ATTR', 'WARN_UNUSED_ATTR', 'WARN_UNUSED_RESULT_ATTR',
               'ALIGNED_ATTR', 'PREPROCESSING_DIRECTIVE', 'MACRO_DEFINITION', 'MACRO_INSTANTIATION',
               'INCLUSION_DIRECTIVE', 'MODULE_IMPORT_DECL', 'TYPE_ALIAS_TEMPLATE_DECL', 'STATIC_ASSERT',
               'FRIEND_DECL', 'OVERLOAD_CANDIDATE']

NODE_LABEL_INDEX_LOOKUP = {l: i for i, l in enumerate(NODE_LABELS)}

def label_to_one_hot(label):
    one_hot = torch.zeros(len(NODE_LABELS) + 1)
    if label in NODE_LABEL_INDEX_LOOKUP:
        one_hot[NODE_LABEL_INDEX_LOOKUP[label]] = 1
    else:
      # Not a known label, so set the last index to 1
      one_hot[-1] = 1
    return one_hot


def label_to_categorical(label):
    if label in NODE_LABEL_INDEX_LOOKUP:
        return int(NODE_LABEL_INDEX_LOOKUP[label])
    else:
      # Not a known label, so return the last index
      return len(NODE_LABELS)


def to_pyg(nx_graph):
  data = pyg.utils.from_networkx(nx_graph)
  data.x = torch.nn.functional.one_hot(data.label, num_classes=len(NODE_LABELS) + 1)
  # TODO: Convert values to feature vectors (e.g. token embeddings) and concat with one-hot labels to form data.x
  return data